[{"F:\\react-colaboratory\\src\\index.tsx":"1","F:\\react-colaboratory\\src\\components\\code-cell.tsx":"2","F:\\react-colaboratory\\src\\components\\code-editor.tsx":"3","F:\\react-colaboratory\\src\\components\\preview.tsx":"4","F:\\react-colaboratory\\src\\bundler\\index.ts":"5","F:\\react-colaboratory\\src\\bundler\\plugins\\fetch-plugin.ts":"6","F:\\react-colaboratory\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"7","F:\\react-colaboratory\\src\\components\\resizable.tsx":"8"},{"size":273,"mtime":1649479852318,"results":"9","hashOfConfig":"10"},{"size":1588,"mtime":1649337125099,"results":"11","hashOfConfig":"10"},{"size":2204,"mtime":1649319007808,"results":"12","hashOfConfig":"10"},{"size":1467,"mtime":1649337161850,"results":"13","hashOfConfig":"10"},{"size":1316,"mtime":1649337012425,"results":"14","hashOfConfig":"10"},{"size":2092,"mtime":1649309784245,"results":"15","hashOfConfig":"10"},{"size":1522,"mtime":1649309841996,"results":"16","hashOfConfig":"10"},{"size":2522,"mtime":1649335291871,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i4lk1e",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},"F:\\react-colaboratory\\src\\index.tsx",[],"F:\\react-colaboratory\\src\\components\\code-cell.tsx",[],["36","37"],"F:\\react-colaboratory\\src\\components\\code-editor.tsx",[],"F:\\react-colaboratory\\src\\components\\preview.tsx",[],"F:\\react-colaboratory\\src\\bundler\\index.ts",[],"F:\\react-colaboratory\\src\\bundler\\plugins\\fetch-plugin.ts",[],"F:\\react-colaboratory\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],"F:\\react-colaboratory\\src\\components\\resizable.tsx",["38","39"],"import './resizable.css';\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable';\nimport { useEffect, useState } from 'react';\n\ninterface ResizableProps {\n  //only these 2 strings will be availble as sirection prop\n  direction: 'horizontal' | 'vertical';\n}\n\n//children is thing when we render resizable component and inside that any other component is rendered\n//so we will render code cell inside this resizable so it will be passed as children to this component\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  //type of props of resizable box props\n  let resizableProps: ResizableBoxProps;\n  //browser height\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  //browser width\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  //code editor width\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\n\n  useEffect(() => {\n    let timer: any;\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        //but wwhenever user resizes the browser these window values will change and \n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n        //if editor width is greater than browser width then change editor width to 0.75 of browser width\n        if (window.innerWidth * 0.75 < width) {\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n    window.addEventListener('resize', listener);\n\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, []);\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      //min and max amount user can expand\n      \n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width,\n      resizeHandles: ['e'],\n      onResizeStop: (event, data) => {\n        //on size stop pass event and data and in data we have current width of resizable box we will set it\n        //width so that even if browser window size changes iresizable editor size remains same\n        setWidth(data.size.width);\n      },\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s'],\n    };\n  }\n\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":16,"column":10,"nodeType":"46","messageId":"47","endLine":16,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":43,"column":6,"nodeType":"50","endLine":43,"endColumn":8,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'innerHeight' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [width]",{"range":"57","text":"58"},[1590,1592],"[width]"]